[1mdiff --git a/src/main/groovy/sisop/oliveiracley/processor/CPU.groovy b/src/main/groovy/sisop/oliveiracley/processor/CPU.groovy[m
[1mindex 2f4ddd7..6b05487 100644[m
[1m--- a/src/main/groovy/sisop/oliveiracley/processor/CPU.groovy[m
[1m+++ b/src/main/groovy/sisop/oliveiracley/processor/CPU.groovy[m
[36m@@ -152,7 +152,7 @@[m [mclass CPU {[m
 		} else {[m
 			interrupt = Interrupts.InvalidProgram[m
 			program = ""[m
[31m-			return "Error on loading file \"${_program}\""[m
[32m+[m			[32mreturn "Error on loading program \"${_program}\""[m
 		}[m
 	}[m
 [m
[36m@@ -216,7 +216,12 @@[m [mclass CPU {[m
 	def execute(){[m
 		if(!program)[m
 			return "There is no program loaded in CPU"[m
[31m-	[m
[32m+[m
[32m+[m			[32mprintln "Program: ${program}"[m
[32m+[m			[32mprintln "PC: ${pc}"[m
[32m+[m			[32mprintln "base: ${base}"[m
[32m+[m			[32mprintln "limit: ${limit}"[m
[32m+[m
 		String output[m
 		if(memory.grep(program)){[m
 [m
[36m@@ -259,6 +264,7 @@[m [mclass CPU {[m
 		} else {[m
 			output = "Aconteceu algo mirabolante!" [m
 		}[m
[32m+[m[41m		[m
 		return output[m
 	}[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/main/groovy/sisop/oliveiracley/processor/Memory.groovy b/src/main/groovy/sisop/oliveiracley/processor/Memory.groovy[m
[1mindex f70abf1..62fd543 100644[m
[1m--- a/src/main/groovy/sisop/oliveiracley/processor/Memory.groovy[m
[1m+++ b/src/main/groovy/sisop/oliveiracley/processor/Memory.groovy[m
[36m@@ -77,7 +77,7 @@[m [mclass Memory {[m
 	def dump(Range[] ranges){[m
 		String output[m
 		if(!CPU.web)	output = "\n\n\t\t${ANSI.CYAN_BACKGROUND} MEMORY DUMP ${ANSI.RESET}"[m
[31m-		else			output = "\n\t\t\t MEMORY DUMP "[m
[32m+[m		[32melse			output = "\n\t\t       MEMORY DUMP "[m
 [m
 		ranges.eachWithIndex { range, i ->[m
 		  	memory.getAt(range)[m
[36m@@ -118,7 +118,7 @@[m [mclass Memory {[m
 					return true[m
 				}[m
 			}[m
[31m-			return false[m
[32m+[m			[32mreturn "Error on loading file \"${program}\""[m
 		}[m
 		return "Program already loaded in memory"[m
 	}[m
[1mdiff --git a/src/main/groovy/sisop/oliveiracley/ui/Console.groovy b/src/main/groovy/sisop/oliveiracley/ui/Console.groovy[m
[1mdeleted file mode 100644[m
[1mindex 2807917..0000000[m
[1m--- a/src/main/groovy/sisop/oliveiracley/ui/Console.groovy[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-// package sisop.oliveiracley.ui[m
[31m-[m
[1mdiff --git a/src/main/groovy/sisop/oliveiracley/ui/server/Render.groovy b/src/main/groovy/sisop/oliveiracley/ui/server/Render.groovy[m
[1mindex 2f94201..ae97c55 100644[m
[1m--- a/src/main/groovy/sisop/oliveiracley/ui/server/Render.groovy[m
[1m+++ b/src/main/groovy/sisop/oliveiracley/ui/server/Render.groovy[m
[36m@@ -23,10 +23,10 @@[m [mclass Render{[m
 			'url' 	: 	properties."server.url"[m
 		][m
 		[m
[31m-		return[m
[31m-			new SimpleTemplateEngine()[m
[31m-				.createTemplate(file)[m
[31m-				.make(binding)[m
[32m+[m
[32m+[m		[32mnew SimpleTemplateEngine()[m
[32m+[m			[32m.createTemplate(file)[m
[32m+[m			[32m.make(binding)[m
 	}[m
 [m
 [m
[36m@@ -50,7 +50,7 @@[m [mclass Render{[m
 				}[m
 			}[m
 		}[m
[31m-[m
[32m+[m[41m		[m
 		def binding = ['response' : resp][m
 		new SimpleTemplateEngine()[m
 			.createTemplate(file)[m
[36m@@ -62,10 +62,9 @@[m [mclass Render{[m
 		def resp = ""[m
 [m
 		map.each{[m
[31m-			it.value.each{[m
[32m+[m			[32mit.value.each{ //it, i ->[m
 				def i = cpu.loadProgram(it as String)[m
[31m-				if(i != true)[m
[31m-					resp += i[m
[32m+[m				[32mif(i != true) { if(!resp) resp = i else resp += "\n${i}"}[m
 			}[m
 		}[m
 [m
[36m@@ -80,13 +79,9 @@[m [mclass Render{[m
 		def resp = ""[m
 [m
 		map.each{[m
[31m-			it.value.each{[m
[32m+[m			[32mit.value.each{ //it, i ->[m
 				def i = cpu.loadProgramToMemory(it as String)[m
[31m-				if(i != true)[m
[31m-					if(i == false)[m
[31m-						resp += "Error on loading file \"${it}\""[m
[31m-					else[m
[31m-						resp += i	[m
[32m+[m				[32mif(i != true) { if(!resp) resp = i else resp += "\n${i}"}[m
 			}[m
 		}[m
 [m
[1mdiff --git a/src/main/groovy/sisop/oliveiracley/ui/server/Web.groovy b/src/main/groovy/sisop/oliveiracley/ui/server/Web.groovy[m
[1mindex 42cb09c..0e9b23a 100644[m
[1m--- a/src/main/groovy/sisop/oliveiracley/ui/server/Web.groovy[m
[1m+++ b/src/main/groovy/sisop/oliveiracley/ui/server/Web.groovy[m
[36m@@ -35,7 +35,7 @@[m [mclass Web {[m
 [m
 		def render[m
 		def port = (properties."server.port" as int) ?: 2345[m
[31m-		def root = new File(properties."ui.views.path")[m
[32m+[m		[32mdef root = new File("./src/main/groovy/sisop/oliveiracley/ui/server/views/")//properties."ui.views.path")[m
 		def server = HttpServer.create(new InetSocketAddress(port), 0)[m
 [m
 		server.createContext("/", { HttpExchange exchange ->	[m
[1mdiff --git a/src/main/groovy/sisop/oliveiracley/ui/server/views/index.html b/src/main/groovy/sisop/oliveiracley/ui/server/views/index.html[m
[1mindex 642ae77..5bcff8b 100644[m
[1m--- a/src/main/groovy/sisop/oliveiracley/ui/server/views/index.html[m
[1m+++ b/src/main/groovy/sisop/oliveiracley/ui/server/views/index.html[m
[36m@@ -13,12 +13,8 @@[m
 		$('body').terminal({[m
 [m
 		    run: function(file){[m
[31m-		    	// const options = $.terminal.parse_options(args);[m
[31m-		    	// options.url || [m
[31m-				return fetch('${url}:${port}/cpu_execute?file=' + file)[m
[32m+[m				[32mreturn fetch(${url} +':'+${port}+'/cpu_execute?file=' + file)[m
 		            .then(r => r.text())[m
[31m-		            // .then(e => console.log(e))[m
[31m-		            // .then(html => html.match(/<CPU>[^>]+<\/CPU>/)[0]);[m
 		    },[m
 [m
 		    load: function(...args){[m
[36m@@ -57,34 +53,6 @@[m
 		    	return options.memory.page[m
 		    },[m
 [m
[31m-		    // dump: function(...args){[m
[31m-		    // 	const options = $.terminal.parse_options(args);[m
[31m-		    // 	let params[m
[31m-		    // 	let urn[m
[31m-[m
[31m-		    // 			if(options.memory)	{	urn = "cpu_load_memory"; params = options.memory; }[m
[31m-		    // 	else 	if(options.cpu)		{	urn = "cpu_load"; params = options.cpu; }[m
[31m-		    // 	else 	if(options.page)	{ params = options.direct; }[m
[31m-		    // 	else						{ this.error('Invalid argument'); return }[m
[31m-[m
[31m-[m
[31m-		    // 	if(options.direct){ [m
[31m-		    // 		return fetch('http://localhost:8080/cpu_load_memory?file=' + params)[m
[31m-      //   				.then( res => res.text() )[m
[31m-      //   				.then( exp => {[m
[31m-						// 		if(exp == ""){[m
[31m-						// 			return fetch('http://localhost:8080/cpu_load_memory?file=' + params)[m
[31m-						// 				.then( re => re.text() )[m
[31m-						// 				.then( ex => { if(ex != ""){ return ex } } )[m
[31m-						// 		} else { return exp	}[m
[31m-    		// 				});[m
[31m-		    // 	} else {[m
[31m-		    // 		return fetch('http://localhost:8080/' + urn + '?file=' + params)[m
[31m-		    //         			.then(res => res.text())[m
[31m-		    //         			.then(exp => { if(exp != ""){ return exp } });[m
[31m-		    // 	}[m
[31m-		    // },[m
[31m-[m
 [m
 [m
 		    get: async function(path) {[m
[36m@@ -100,9 +68,43 @@[m
 [m
 		    help: function(){[m
 		    	this.echo([m
[31m-		    		"\n>> Help section ~" +[m
[31m-		    		"\n	cls: Limpa o terminal;"+[m
[31m-		    		"\n load"[m
[32m+[m		[41m    [m		[32m">> Help section ~" +[m
[32m+[m[41m		    		[m
[32m+[m		[41m    [m		[32m"\n [...] Optiona params"+[m
[32m+[m		[41m    [m		[32m"\n <...> Needed params"+[m
[32m+[m
[32m+[m		[41m    [m		[32m"\n\n > cls"+[m
[32m+[m		[41m    [m		[32m"\n Clear the terminal;"+[m
[32m+[m[41m		    		[m
[32m+[m		[41m    [m		[32m"\n\n > load --memory <File || \"File1, ...,File(n)\">"+[m
[32m+[m		[41m    [m		[32m"\n Load the file or files passed by param to the memory"+[m
[32m+[m
[32m+[m		[41m    [m		[32m"\n\n > load --cpu <File || \"File1, ...,File(n)\">"+[m
[32m+[m		[41m    [m		[32m"\n Prepare the CPU to run the program."+[m
[32m+[m		[41m    [m		[32m"\n If more then one file name is passed by param,"+[m
[32m+[m		[41m    [m		[32m"\n just the last one will be ready to run."+[m
[32m+[m
[32m+[m		[41m    [m		[32m"\n\n > load --direct <File || \"File1, ...,File(n)\">"+[m
[32m+[m		[41m    [m		[32m"\n Load to memory the files and prepare the CPU with"+[m
[32m+[m		[41m    [m		[32m"\n the last file on the params."+[m
[32m+[m
[32m+[m		[41m    [m		[32m"\n\n > run [File || \"File1, ...,File(n)\"]"+[m
[32m+[m		[41m    [m		[32m"\n Execute the file on the CPU if no param have"+[m[41m [m
[32m+[m		[41m    [m		[32m"\n been given on param."+[m
[32m+[m		[41m    [m		[32m"\n Also can load on CPU and run all programs"+[m
[32m+[m		[41m    [m		[32m"\n given on params"+[m
[32m+[m
[32m+[m					[32m"\n\n > dump --memory <Program || \"Program1, ..., Program(N)\">"+[m
[32m+[m					[32m"\n Shows the memory from n until m real positions"+[m[41m	[m
[32m+[m
[32m+[m					[32m"\n\n > dump --memory <n..m>"+[m
[32m+[m					[32m"\n Shows the memory from n until m real positions"+[m
[32m+[m
[32m+[m					[32m"\n\n > dump --pages <n..m>"+[m
[32m+[m					[32m"\n Shows the n until m pages of memory"+[m
[32m+[m
[32m+[m					[32m"\n\n > dump --registers"+[m
[32m+[m					[32m"\n Shows the CPU registers status\n"[m
 	    		);[m
 		    }[m
 [m
[36m@@ -110,7 +112,8 @@[m
 			checkArity: false,[m
 			completion: true,[m
 		    greetings: 	'Sistemas Operacionais. Maquina virtual,\n'+[m
[31m-						'Cleyson Braga de Oliveira'[m
[32m+[m						[32m'Cleyson Braga de Oliveira' +[m
[32m+[m						[32m'\n=> Type help see the commands list'[m
 		});[m
 	</script>[m
 </body>[m
